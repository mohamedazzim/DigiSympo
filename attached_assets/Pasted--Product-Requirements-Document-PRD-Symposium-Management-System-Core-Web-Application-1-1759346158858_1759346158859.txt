# Product Requirements Document (PRD) ## Symposium Management System (Core Web Application) --- ## 1. Overview
The Symposium Management System is a React-based web application designed to streamline the planning, execution, and monitoring of symposium events. It supports Super Admins and Event Admins, enabling centralized control, per-event customization, participant management, proctoring-enabled online tests, and result generation.

The system ensures secure online assessments, role-based access, and real-time reporting, while maintaining scalability for multiple events under one symposium.

--- ## 2. Objectives
Provide a centralized platform for symposium events.
Allow Super Admins to oversee all events with granular access.
Enable Event Admins to manage per-event operations, including rules, questions, rounds, and participants.
Ensure exam/test integrity using strict proctoring rules.
Generate and download event-wise and symposium-wide reports.
Deliver a professional, intuitive UI using React only (no mobile app initially).
--- ## 3. User Roles and Responsibilities ### 3.1 Super Admin
Create, manage, and delete symposium events.
Assign Event Admins with credentials.
Access all events, their rules, questions, and leaderboards.
Update or override event rules/questions if required.
View and manage participants across all events.
Download reports:
Event-wise report
Overall symposium report
Monitor system usage and ensure compliance.
### 3.2 Event Admin (Per-Event)
Manage only their assigned event.
Define and upload event details:
Event name, description, and type (quiz, coding, general, etc.).
Event rounds (Round 1, Round 2, etc.).
Upload/manage event rules, including:
No page refresh allowed during test.
No tab switch allowed during test.
Automatic fullscreen mode when test begins.
Shortcut keys disabled (Alt+Tab, Ctrl+C, etc.).
Only after submitting answers → fullscreen lock is removed.
Upload and manage questions per round.
Track participant progress.
View event-specific leaderboards.
Download event-level reports.
### 3.3 Participants
Register/join assigned events.
View event rules before the test.
Take tests under enforced proctoring rules (fullscreen, no tab switch, no refresh).
Submit answers within the defined time limit.
View results/leaderboard post-event.
--- ## 4. Core Features ### 4.1 Authentication & Authorization
Secure login for Super Admin and Event Admin.
Credentials assigned by Super Admin.
Role-based dashboards.
### 4.2 Event Management
Super Admin creates and assigns Event Admins.
Event Admin manages event-specific details.
Event rounds can be added, modified, or deleted.
### 4.3 Rules & Proctoring
Event Admin uploads round rules.
System enforces rules during tests:
No refresh → auto submission if detected.
No tab switch → warning then auto submission.
Fullscreen lock until submission.
Shortcuts disabled.
Strict integrity maintained across all events.
### 4.4 Question Management
Event Admin creates question banks per round.
Supports multiple-choice, coding, or descriptive questions.
Timer-based auto submission.
### 4.5 Leaderboards & Reports
Event Admin sees event-specific leaderboard.
Super Admin sees all leaderboards.
Download options:
Event-wise report (Excel/PDF).
Symposium-wide consolidated report.
### 4.6 Participant Flow
Login/Register.
View event details and rules.
Start test → enters secure fullscreen mode.
Complete test under no refresh/tab-switch/shortcut enforcement.
Submit answers → exit fullscreen.
View results after evaluation.
--- ## 5. Technical Stack
Frontend: React (strictly web-only).
Backend: Node.js/Express or Django (based on final choice).
Database: MongoDB (NoSQL).
Authentication: JWT-based.
Reports: Export in Excel/PDF.
Proctoring: Implemented via browser APIs + JS event listeners (fullscreen, focus detection, key event restrictions).
--- ## 6. Future Enhancements
E-Certificates Generation:
Auto-generate participant certificates per event.
Include event details, participant name, and organizer signature.
Downloadable as PDF.
AI-based proctoring (camera + mic monitoring).
Advanced analytics dashboards for organizers.
--- ## 7. Success Metrics
Reduced manual management of symposium events.
100% secure and fair online test environment.
Real-time leaderboard and reporting for transparency.
Scalability to handle multiple events and participants concurrently.
--- ## 8. Risks & Mitigations
Browser limitations → Use fallback proctoring (logging attempts, warnings, and auto submission).
Scalability concerns → Use MongoDB with proper indexing and cloud hosting.
User experience → Ensure simple UI to avoid confusion for first-time participants.
--- ## 9. Deliverables
Fully functional React-only Symposium Web App.
Super Admin Dashboard.
Event Admin Dashboard (per-event management).
Participant Interface (proctored testing).
Report generation (event-wise & symposium-wide).
---