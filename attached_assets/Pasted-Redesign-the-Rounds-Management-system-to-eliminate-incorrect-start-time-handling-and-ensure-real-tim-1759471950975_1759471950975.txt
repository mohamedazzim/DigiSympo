Redesign the Rounds Management system to eliminate incorrect start time handling and ensure real-time synchronization of round status between the Event Admin Dashboard and Participants UI.

🔍 Current Problems

Start Time Misuse

Start time is shown automatically at round creation, even before the admin actually begins the test.

This creates confusion: participants see Not Started while admins see a timestamp.

Broken Status Sync

When the admin clicks End Test, the round shows Completed in admin view.

Participants still see Not Started, showing API status is not properly linked across views.

No Live Updates

Participant UI does not refresh dynamically when admin changes round status.

Manual reload is required to see updates, breaking the live test experience.

✅ Proposed Fix
1. Remove Start Time Field

Remove start time display from both UI and API responses.

Backend should no longer auto-generate startTime.

Track startedAt and endedAt only for logs/analytics, not for UI display.

2. Define Round Status Lifecycle

Each round must strictly follow these 3 lifecycle states:

Not Started → Default status when a round is created.

In Progress → Status updates when Event Admin clicks "Begin Test".

Completed → Status updates when Event Admin clicks "End Test".

3. API Changes
Round Schema (Updated)
{
  "roundId": "123",
  "name": "Preliminary Round",
  "duration": "60 minutes",
  "status": "not_started",   // not_started | in_progress | completed
  "participants": 25,
  "startedAt": null,
  "endedAt": null
}

Endpoints

POST /rounds/:id/start
→ Sets status = in_progress, updates startedAt.

POST /rounds/:id/end
→ Sets status = completed, updates endedAt.

4. UI Changes
Admin Dashboard (Rounds Page)

Display: Round #, Name, Duration, Status.

Remove: Start Time field.

Actions:

Start Round → Visible only if status = not_started.

End Round → Visible only if status = in_progress.

Participant View

If status = not_started → Show message: "Round not yet started." (test locked).

If status = in_progress → Enable Take Test button → User enters test mode.

If status = completed → Auto-submit any ongoing answers → Show "Round Completed / View Results".

5. Real-Time Sync

Implement WebSocket OR Polling API (every 5s) for instant status updates.

Participant UI should auto-update when admin starts or ends the round—no page refresh required.

📈 Expected Outcome

Start Time confusion eliminated.

Admin and Participant views always synchronized.

Clear, consistent 3-step lifecycle for every round.

Smooth flow:

Admin clicks "Begin Test" → Participant UI unlocks test.

Admin clicks "End Test" → Participants’ tests end automatically, answers submitted, results accessible.