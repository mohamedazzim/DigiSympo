Continuously test, validate, and auto-fix all functionalities of the Symposium Management System across Event Admin, Admission Committee, Registration Committee, and Participants. Ensure end-to-end flows work perfectly with real-time sync and dummy data.

✅ Scope of Autonomous Testing
1. Event Admin Flow

Account Creation: Verify admin is correctly linked to a single event.

Dashboard: Ensure only assigned event is visible (no multi-event confusion).

Round Management:

Create round (dummy: “Preliminary Round”).

Test lifecycle: Not Started → In Progress → Completed.

Verify status sync with participant UI in real-time.

Test Control:

Enable/Disable test.

Monitor participant submissions in live results.

Leaderboard updates instantly.

Fixes: Auto-detect and correct broken status sync, UI misalignment, or API mismatch.

2. Admission Committee Flow

Login Validation: Ensure proper role segregation (Admission Committee cannot access Admin-only tools).

Participant Review:

Fetch participant list.

Approve / reject dummy registrations.

Validate API CRUD for participant approvals.

Fixes: Ensure committee-only actions cannot override event admin actions.

3. Registration Committee Flow (On-Spot Registration)

New Functional Requirement: Add ability for Registration Committee to directly register participants from their portal.

CRUD Functionalities:

Create participant (dummy form input).

Read participant details.

Update participant profile.

Delete participant entry.

Test: Validate that on-spot registered participants sync correctly with Admission Committee + Event Admin.

4. Participant Flow

Account Creation: Dummy registrations (both pre-event and on-spot).

Login: Ensure only their event test is accessible.

Test Flow:

Locked before admin starts.

Unlocked when in progress.

Auto-submit when admin ends or timer expires.

Results:

View submitted answer sheet.

See correct/wrong answers & score breakdown.

View leaderboard (post submission).

Fixes: Ensure no mismatch between test status and participant view.

🔧 Autonomous Testing Features

Dummy Data Generator

Create sample events, rounds, participants, committees.

Use realistic but random test data for full coverage.

API Testing

Test all endpoints: Create, Update, Delete, Fetch.

Verify response schemas & error handling.

UI Testing

Validate role-based access control.

Ensure proper button visibility (e.g., Start only visible if Not Started).

Verify real-time updates (via WebSocket or polling).

Auto-Fix Mode

If status mismatch → sync backend + UI logic.

If CRUD fails → log error, retry, auto-patch schema if missing fields.

If participant state desyncs → enforce consistency by revalidating session.

📈 Expected Outcomes

Zero broken flows across Admin, Committees, and Participants.

All CRUD tested with dummy data in every role.

Real-time synchronization confirmed for test lifecycle.

Perfect separation of roles (no leakage of unauthorized access).

On-spot registration feature fully working with Registration Committee.

Continuous self-healing tests → system remains stable even after fixes.

👉 This becomes your autonomous QA & Fixing master instruction.